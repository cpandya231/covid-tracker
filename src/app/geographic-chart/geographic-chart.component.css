::ng-deep.parent {
    height: 100%;
}

h1 {
    color: #091D83;
    padding: 0.5em 1em 0.5em;
    margin-bottom: 0em;
    text-align: center;
    font-weight: bold;
}

h3 {
    font-size: 1.2rem;
    margin: 1.2em;
    width: 10rem;
}

#state-data {
    border-collapse: collapse;
    width: 100%;
}

th {
    padding: 0.6em 0em;
    font-size: 0.9rem;
    text-align: left;
    border-bottom: 1px solid #BAC5F8;
}

td {
    padding: 0.6em 0em;
    font-size: 0.9rem;
}

.highlight {
    font-weight: bold;
}

.state-info tr:hover {
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    cursor: pointer;
    transform: scale(1.01);
}

.state-info tr:hover:first-child {
    background-color: inherit;
    box-shadow: none;
}

.district-info tr:hover {
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    -webkit-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
}

#geographical-map {
    margin: 1em auto;
}

 ::ng-deep.subunit {
    stroke: #fff;
    stroke-width: 1px;
    display: inline;
}

 ::ng-deep.subunit.active {
    cursor: pointer;
    stroke: whitesmoke;
    stroke-width: 5px;
}

 ::ng-deep.subunit-label {
    font-size: .5em;
    text-shadow: 0px 0px 2px #fff;
    font-weight: bold;
    text-transform: uppercase;
}

 ::ng-deep.tooltip {
    position: absolute;
    text-align: center;
    width: 100px;
    height: 85px;
    padding: 2px;
    font: 12px sans-serif;
    background: #fff;
    border: 0px;
    pointer-events: none;
    opacity: 0;
}

.colors {
    width: 90%;
    margin: auto 1em auto 1em;
    padding: 1em;
}

.colordim {
    width: 3.6em;
    height: 1.2em;
}

.color1 {
    background-color: #BAC5F8;
}

.color2 {
    background-color: #99AAF8;
}

.color3 {
    background-color: #5F76F0;
}

.color4 {
    background-color: #0C2FE7;
}

.color5 {
    background-color: #091D83;
}

 ::ng-deep #confirmed-cases {
    margin-left: 2em;
}

 ::ng-deep .colordata span {
    font-size: 0.45rem;
}

.svgcontent {
    animation: fadeDown 1s forwards;
}

.svgcontent-width {
    width: 80%;
    margin-left: 2.5em;
}

.table-wrapper {
    animation: fadeDown 3s forwards;
}

.mat-cell {
    padding: 0px 8px 0px 0;
}

::ng-deep.confirmed {
    color: blue;
}

 ::ng-deep.active {
    color: red;
}

 ::ng-deep.recovered {
    color: rgb(48, 197, 48);
}

 ::ng-deep.death {
    color: gray;
}

.expandedTable {
    overflow: hidden;
}

tr.example-detail-row {
    height: 0;
}

tr.example-detail-row:hover {
    background-color: white;
}

.expandedTable table {
    width: 100%;
}

mat-form-field {
    font-size: 14px;
    width: 85%;
    margin: auto 3em auto 1.6em;
}

::ng-deep.line {
    fill: none;
    stroke: #ffab00;
    stroke-width: 3;
}

::ng-deep.overlay {
    fill: none;
    pointer-events: all;
}

::ng-deep#wrapper {
    margin-top: 5em;
}

@media(min-width:730px) {
    .colors {
        width: 80%;
    }
    .colordim {
        width: 7em;
        height: 1.2em;
    }
}

@media(min-width:1024px) {
    h3 {
        margin: 0em;
        width: 10rem;
    }
     ::ng-deep.parent {
        overflow: hidden;
    }
    .svgcontent {
        width: 45%;
        height: 50%;
        margin-top: 1em;
        animation: fadeIn 5s forwards;
    }
     ::ng-deep#content {
        height: 40em;
        margin: 2em auto;
    }
     ::ng-deep.container {
        display: flex;
        justify-content: space-evenly;
        flex-direction: row-reverse;
    }
    #state-data {
        display: block;
        height: 500px;
        overflow-y: scroll;
        overflow-x: hidden;
        width: 30em;
        height: 39em;
    }
    .colors {
        width: 80%;
        margin: -2.4em 0em 3em;
    }
    .colordim {
        width: 3.6em;
        height: 1.2em;
    }
    .table-wrapper {
        animation: fadeIn 1s forwards;
    }
}

@media(min-width:1100px) {
    .svgcontent {
        width: 40%;
    }
}

@media(min-width:1250px) {
    .svgcontent {
        width: 30%;
    }
    .colors {
        width: 80%;
        margin: 1em 0.4em;
    }
    .colordim {
        width: 4em;
        height: 1.2em;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateX(-2em);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeDown {
    from {
        opacity: 0;
        transform: translateT(-2em);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}